ARG BASE_IMAGE=node:18-buster
# Base of build ###################################################
FROM $BASE_IMAGE as base
RUN apt update && apt-get -y install sqlite3 python3 python3-pip python3-setuptools vim curl telnet
RUN pip3 install --upgrade pip awscli awscli-local
# Need to downgrade boto3 because there is a bug breaking creating SQS queues
RUN pip3 install boto3==1.25.5
RUN corepack enable
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN pnpm config set store-dir /.pnpm-store

# Fetch dependencies ##############################################
FROM base as deps
WORKDIR /src
COPY ./*.json .
COPY ./*.yaml .
RUN --mount=type=cache,id=pnpm,target=/.pnpm-store pnpm fetch
RUN pnpm add -g typescript turbo
RUN turbo telemetry disable

# Copy packages library and harmony source #########################
COPY ./packages ./packages
COPY ./services/harmony ./services/harmony

# Prune projects ##################################################
FROM deps AS pruner

WORKDIR /src

RUN turbo prune --scope="@harmony/harmony" --docker
# turbo prune misses the top-level tsconfig.base.json for some reason
COPY tsconfig.base.json /src/out/full

# Build the project ###############################################
FROM deps AS builder
WORKDIR /app

# Copy lockfile and package.json's of isolated subworkspace
COPY --from=pruner /src/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=pruner /src/out/json/ .

# Copy directories need by harmony
COPY ./db /app/db
COPY ./config /app/config
COPY ./bin /app/bin

# Copy source code of isolated subworkspace and build it
COPY --from=pruner /src/out/full/ .
RUN --mount=type=cache,id=pnpm,target=/.pnpm-store pnpm install -r --offline --prod --frozen-lockfile
RUN pnpm run -r bld

# Delete non-production node_modules and TypeScript source code
RUN yes | pnpm prune --prod --no-optional
RUN find /app -name "*.ts" -type f -delete

# Build the service image #########################################
FROM deps AS service
ARG PORT=5000
RUN mkdir -p /tmp/metadata
WORKDIR "/harmony/services/harmony"
COPY --from=builder /app/ "/harmony/"
RUN cp -rf /harmony/db/* db
# RUN mkdir -p "/harmony/bin"
EXPOSE $PORT
CMD [ "node", "app/server.js" ]

