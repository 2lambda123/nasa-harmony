ARG BASE_IMAGE=node:18-buster
FROM $BASE_IMAGE as base
RUN apt update && apt-get -y install sqlite3 python3 python3-pip python3-setuptools vim curl telnet
RUN pip3 install --upgrade pip awscli awscli-local
# Need to downgrade boto3 because there is a bug breaking creating SQS queues
RUN pip3 install boto3==1.25.5
RUN corepack enable
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN pnpm config set store-dir ~/.pnpm-store
RUN pnpm add -g typescript
RUN pnpm add -g turbo

# Fetch dependencies
FROM base as depends
WORKDIR /src
COPY ./pnpm-lock.yaml /src
RUN pnpm fetch --prod

# Prune projects
FROM depends AS pruner
ARG PROJECT

WORKDIR /src
COPY . .
RUN turbo prune --scope="@harmony/${PROJECT}" --docker
# turbo prune misses the top-level tsconfig.base.json for some reason
COPY tsconfig.base.json /src/out/full
COPY db/ /src/out/full/db

# Build the project
FROM pruner AS builder
WORKDIR /app

# Copy lockfile and package.json's of isolated subworkspace
COPY --from=pruner /src/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=pruner /src/out/json/ .

# Copy source code of isolated subworkspace and build it
COPY --from=pruner /src/out/full/ .
RUN pnpm install -r --offline --prod --frozen-lockfile
RUN pnpm run -r bld

# Delete non-production node_modules and TypeScript source code
RUN yes | pnpm prune --prod --no-optional
RUN rm -rf ./**/*.ts
FROM builder AS service
ARG PROJECT
ARG PORT=5000
RUN mkdir -p /tmp/metadata
WORKDIR "/$PROJECT/services/$PROJECT"
COPY --from=builder /app/ /$PROJECT/
EXPOSE $PORT
CMD [ "node", "app/server.js" ]

