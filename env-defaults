# Default Harmony Environment Variables - do not edit this file locally.
# Override any of the values here by setting a value in a .env file at the
# root level of this repository. All of the default values in this file
# should work for developing locally on Mac OS X.

###########################################################################
#                             No defaults possible                        #
#                                                                         #
# Parameters must be overridden, no default value can be provided         #
###########################################################################

# Random string used to sign cookies that should be consistent between
# load-balanced instances of Harmony.  You can use
# `hexdump -n 128 -e '"%08x"' /dev/random`
# to generate a 128 byte random hex string (256 chars)
COOKIE_SECRET=

# Random string used for encrypting and decrypting Earthdata login tokens
# sent to backend services
# `hexdump -n 32 -e '"%08x"' /dev/random`
# to generate a 32 character random string
SHARED_SECRET_KEY=

###########################################################################
#                             General Config                              #
#                                                                         #
# Settings to control how Harmony behaves                                 #
###########################################################################

# The host network interface to bind against. Set to 127.0.0.1 to limit to
# only on the localhost when running locally
HOST_BINDING='0.0.0.0'

# The port on which to run the Harmony frontend
PORT=3000

# The Metrics Endpoint (Kibana) to use (linked to from the Workflow UI)
METRICS_ENDPOINT=

# The Metrics index to query (via the METRICS_ENDPOINT)
METRICS_INDEX=

# TODO - Can't find where this is used in the code - maybe just and env var used indirectly
# by a library?
# If set to true, only include EDL cookies if the request is made via https.
USE_HTTPS=false

# Whether to run example service endpoints under /example.  Useful for
# testing HTTP backends without actual service calls.  See example/http-service.js
EXAMPLE_SERVICES=true

# Log level (error, warn, info, debug)
LOG_LEVEL=debug

# Default number of results in a page
DEFAULT_RESULT_PAGE_SIZE=2000

# Default number of jobs listed in a page
DEFAULT_JOB_LIST_PAGE_SIZE=10

# TODO change this to a smaller number when aggregating services are updated to handle paged catalogs
# See HARNONY-1178
AGGREGATE_STAC_CATALOG_MAX_PAGE_SIZE=1000000

# Maximum number of results in a page
MAX_PAGE_SIZE=2000

# Number of granules allowed for a synchronous request. When the request exceeds
# this number it will be processed asynchronously. If a service provides a
# value in services.yml for maximum_sync_granules it will override this value.
MAX_SYNCHRONOUS_GRANULES=1

# The threshold of the number of granules in a request that will trigger auto-pausing with preview
PREVIEW_THRESHOLD=100

# The maximum number of errors to allow for a job before considering it failed
MAX_ERRORS_FOR_JOB=2000

# A bucket with brief lifecycle where temporary uploads (shapefiles) are stored while
# requests are in flight
UPLOAD_BUCKET=local-upload-bucket

# The EDL Group ID for the group whose users can access the admin interface
ADMIN_GROUP_ID=9b359064-287f-411f-b2cc-ed4429676900

# The EDL Group ID for the group whose users can access logs in the workflow-ui for their own jobs or shareable jobs
LOG_VIEWER_GROUP_ID=0cf2a427-96cc-453e-ae44-e28dd0958738

# The time (in seconds) between invocations of the work reaper service
WORK_REAPER_PERIOD_SEC=360

# WorkItems and WorkflowSteps (in a terminal state) older than this many minutes are checked by the work reaper
REAPABLE_WORK_AGE_MINUTES=1440

# The batch size of the work reaper service
WORK_REAPER_BATCH_SIZE=2000

# The time (in seconds) between invocations of the work failer service
WORK_FAILER_PERIOD_SEC=120

# WorkItems that have not been updated for more than this many minutes are
# updated by the work failer (resulting either in job and work item failure or a retry)
FAILABLE_WORK_AGE_MINUTES=1

# The number of ms to wait between polling to check whether a synchronous request completed
SYNC_REQUEST_POLL_INTERVAL_MS=100

# Number of times to retry a failed work item
WORK_ITEM_RETRY_LIMIT=5

# The maximum number of input granules in each invocation of a service
MAX_BATCH_INPUTS=1000000000000

# The upper limit on the combined sizes of all the files in a batch
MAX_BATCH_SIZE_IN_BYTES=5000000000

# The batch size used by work-failer. Set it to 0 will effectively disable work-failer.
WORK_FAILER_BATCH_SIZE=1000

# The fraction of back-end get work requests we want to trace with open telemetry
GET_WORK_SAMPLE_RATIO=0.01
# The fraction of back-end put work result requests we want to trace with open telemetry
PUT_WORK_SAMPLE_RATIO=0.1
# The fraction of metrics requests we want to trace with open telemetry
GET_METRICS_SAMPLE_RATIO=0.01
# The url for the open telemetry exporter daemon
OPEN_TELEMETRY_URL=http://localhost:4318/v1/traces

# Bamboo release
RELEASE_VERSION=0.0.0

# The object store used for storing shapefiles. Only S3 is supported currently.
OBJECT_STORE_TYPE=s3

# Maximum number of non-file fields to accept when providing a shapefile to harmony
MAX_POST_FIELDS=100

# Maximum size (in bytes) for shapefiles
MAX_POST_FILE_SIZE=2000000000

# Maximum number of multipart parts to accept when providing a shapefile
MAX_POST_FILE_PARTS=100

#############################################################################
#                        OAuth 2 (Earthdata Login)                          #
#                                                                           #
# Variables used to configure OAuth 2 authentication for Harmony data users #
#                                                                           #
# To use Earthdata Login, you must first set up a new application using the #
# Earthdata Login UI.                                                       #
# https://wiki.earthdata.nasa.gov/display/EL/How+To+Register+An+Application #
#############################################################################

# Variable            Description                 Example
#--------------------------------------------------------------------------------------
# OAUTH_CLIENT_ID     EDL App Client ID           rCjHBluumLhppiIX5iZxoQ
# OAUTH_UID           EDL App UID                 harmony_kbeam
# OAUTH_PASSWORD      EDL App Password            top_secret
# OAUTH_REDIRECT_URI  Valid EDL App Redirect URL  http://localhost:3000/oauth2/redirect
# OAUTH_HOST          Earthdata Login URL         https://uat.urs.earthdata.nasa.gov

# Notes:
# The OAUTH_REDIRECT_URI needs to be provided verbatim when setting up the
# Earthdata Login app. Each EDL app has a list of valid Redirect URLs, and
# Harmony requires a URI endpoint of "/oauth2/redirect" for all environments.
# When running Harmony locally, for example, add a Redirect URL of
# `http://localhost:3000/oauth2/redirect`. Use HTTPS for non-local instances.
#
# The OAUTH_HOST is used by the Harmony API as well as Harmony services.
# This should be the same EDL environment as used by backend data sources.
# For example, if OAUTH_HOST points to UAT EDL, downloading data from a
# TEA endpoint that's integrated with PROD EDL will fail.

OAUTH_CLIENT_ID=
OAUTH_UID=
OAUTH_PASSWORD=

OAUTH_REDIRECT_URI=http://localhost:3000/oauth2/redirect
OAUTH_HOST=https://uat.urs.earthdata.nasa.gov

###########################################################################
#                        Fallback Authentication                          #
###########################################################################

# When using data that cannot accept Earthdata Login tokens from
# Harmony, either because of application group setup or because they
# use a different Earthdata Login endpoint (e.g. Data needs production
# while Harmony and CMR need UAT), these provide a
# minimally-privileged EDL user login for fetching remote data behind
# Earthdata Login. This user should exist in all environments being
# used to fetch data.

# CAUTION: This fallback authentication switch should normally be
# disabled.

# CAUTION: This EDL user should *not* have accepted any EDL
# application EULAs. Doing so can result in users getting data for
# which they have not personally accepted the EULA.

# CAUTION: Enabling this could result in skewed metrics since
# downloads will appear to be done by Harmony--not the actual
# end-user--if the fallback authentication is used (e.g., a backend
# data source doesn't yet support EDL federated tokens).

FALLBACK_AUTHN_ENABLED=false
EDL_USERNAME=
EDL_PASSWORD=

###########################################################################
#                               Test Suite                                #
#                                                                         #
# Settings for altering the behavior of the test suite that are not used  #
# elsewhere in the application.                                           #
###########################################################################

# How to handle fixtures for remote calls in the test suite:
#   record (default): Perform and record new calls.  Replay existing calls.
#   bloody: Perform and record all calls.  Never play back.
#   replay: Always play back.  Throw an error if a call is not recorded.
#   cheat: Play back cached calls.  Perform and do not cache any new calls
REPLAY=record

# True if server logs should be allowed to go to STDOUT.  When false
# (default), they are routed to logs/test.log and suppressed in STDOUT
LOG_STDOUT=false


###########################################################################
#                              Services                                   #
#                                                                         #
###########################################################################
HARMONY_GDAL_ADAPTER_IMAGE=ghcr.io/nasa/harmony-gdal-adapter:latest
HARMONY_GDAL_ADAPTER_SERVICE_QUEUE_URLS='["ghcr.io/nasa/harmony-gdal-adapter:latest,http://localstack:4566/queue/harmony-gdal-adapter.fifo"]'
HYBIG_IMAGE=sds/harmony-browse-image-generator:latest
HYBIG_SERVICE_QUEUE_URLS='["sds/harmony-browse-image-generator:latest,http://localstack:4566/queue/hybig.fifo"]'
HARMONY_SERVICE_EXAMPLE_IMAGE=harmonyservices/service-example:latest
HARMONY_SERVICE_EXAMPLE_SERVICE_QUEUE_URLS='["harmonyservices/service-example:latest,http://localstack:4566/queue/harmony-service-example.fifo"]'
HARMONY_NETCDF_TO_ZARR_IMAGE=ghcr.io/nasa/harmony-netcdf-to-zarr:latest
HARMONY_NETCDF_TO_ZARR_SERVICE_QUEUE_URLS='["ghcr.io/nasa/harmony-netcdf-to-zarr:latest,http://localstack:4566/queue/harmony-netcdf-to-zarr.fifo"]'
HARMONY_REGRIDDER_IMAGE=sds/harmony-regridder:latest
HARMONY_REGRIDDER_SERVICE_QUEUE_URLS='["sds/harmony-regridder:latest,http://localstack:4566/queue/harmony-regridder.fifo"]'
SWOT_REPROJECT_IMAGE=sds/swot-reproject:latest
SWOT_REPROJECT_SERVICE_QUEUE_URLS='["sds/swot-reproject:latest,http://localstack:4566/queue/swot-reproject.fifo"]'
VAR_SUBSETTER_IMAGE=sds/variable-subsetter:latest
VAR_SUBSETTER_SERVICE_QUEUE_URLS='["sds/variable-subsetter:latest,http://localstack:4566/queue/var-subsetter.fifo"]'
SDS_MASKFILL_IMAGE=sds/maskfill-harmony:latest
SDS_MASKFILL_SERVICE_QUEUE_URLS='["sds/maskfill-harmony:latest,http://localstack:4566/queue/sds-maskfill.fifo"]'
TRAJECTORY_SUBSETTER_IMAGE=sds/trajectory-subsetter:latest
TRAJECTORY_SUBSETTER_SERVICE_QUEUE_URLS='["sds/trajectory-subsetter:latest,http://localstack:4566/queue/trajectory-subsetter.fifo"]'
PODAAC_CONCISE_IMAGE=ghcr.io/podaac/concise:sit
PODAAC_CONCISE_SERVICE_QUEUE_URLS='["ghcr.io/podaac/concise:sit,http://localstack:4566/queue/podaac-concise.fifo"]'
PODAAC_L2_SUBSETTER_IMAGE=ghcr.io/podaac/l2ss-py:sit
PODAAC_L2_SUBSETTER_SERVICE_QUEUE_URLS='["ghcr.io/podaac/l2ss-py:sit,http://localstack:4566/queue/podaac-l2-subsetter.fifo"]'
PODAAC_PS3_IMAGE=podaac/podaac-cloud/podaac-shapefile-subsetter:latest
PODAAC_PS3_SERVICE_QUEUE_URLS='["podaac/podaac-cloud/podaac-shapefile-subsetter:latest,http://localstack:4566/queue/podaac-shapefile-subsetter.fifo"]'
PODAAC_NETCDF_CONVERTER_IMAGE=podaac/podaac-cloud/podaac-netcdf-converter:latest
PODAAC_NETCDF_CONVERTER_SERVICE_QUEUE_URLS='["podaac/podaac-cloud/podaac-netcdf-converter:latest,http://localstack:4566/queue/podaac-netcdf-converter.fifo"]'
QUERY_CMR_IMAGE=harmonyservices/query-cmr:latest
QUERY_CMR_SERVICE_QUEUE_URLS='["harmonyservices/query-cmr:latest,http://localstack:4566/queue/query-cmr.fifo"]'
GIOVANNI_ADAPTER_IMAGE=harmonyservices/giovanni-adapter:latest
GIOVANNI_ADAPTER_SERVICE_QUEUE_URLS='["harmonyservices/giovanni-adapter:latest,http://localstack:4566/queue/giovanni-adapter.fifo"]'

