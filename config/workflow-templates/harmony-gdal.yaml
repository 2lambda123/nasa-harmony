apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: harmony-gdal
spec:
  entrypoint: harmony-gdal-steps
  templates:
    - name: harmony-gdal-steps
      inputs:
        artifacts:
        - name: metadata
        parameters:
          - name: operation
          - name: stac-catalog-link
          - name: image-pull-policy
          - name: timeout
          - name: STAGING_PATH
      steps:
      - - name: last-step
          template: harmony-gdal-service
          arguments:
            artifacts:
            - name: metadata
              from: "{{inputs.artifacts.metadata}}"
            parameters:
            - name: operation
              value: "{{inputs.parameters.operation}}"
            - name: stac-catalog-link
              value: "{{inputs.parameters.stac-catalog-link}}"
            - name: image-pull-policy
              value: "{{inputs.parameters.image-pull-policy}}"
            - name: timeout
              value: "{{inputs.parameters.timeout}}"
            - name: STAGING_PATH
              value: "{{inputs.parameters.STAGING_PATH}}"
      outputs:
        artifacts:
          - name: metadata
            from: "{{steps.last-step.outputs.artifacts.metadata}}"
        parameters:
          - name: stac-catalog-link
            value: "/tmp/stac-catalog.json"
    - name: harmony-gdal-service
      inputs:
        artifacts:
        - name: metadata
          path: /tmp/metadata
        parameters:
          - name: operation
          - name: stac-catalog-link
          - name: image-pull-policy
          - name: timeout
          - name: STAGING_PATH
      outputs:
        artifacts:
        # generate metadata artfiact from /tmp/metadata directory
          - name: metadata
            path: /tmp/metadata
        parameters:
          - name: stac-catalog-link
            value: "/tmp/stac-catalog.json"
      podSpecPatch: '{"activeDeadlineSeconds":{{inputs.parameters.timeout}}}'
      container:
        image: "<DOCKER_IMAGE>"
        imagePullPolicy: "{{inputs.parameters.image-pull-policy}}"
        command: ["python3"]
        args:
        # TODO need to pass in the stac-catalog-link so the library knows which stac catalog
        # to use
          [
            "-m",
            "harmony_gdal",
            "--harmony-action",
            "invoke",
            "--harmony-input",
            "{{inputs.parameters.operation}}",
          ]
        envFrom:
          - configMapRef:
              name: harmony-env
          - secretRef:
              name: harmony-secrets
        env:
          - name: STAGING_PATH
            value: "{{inputs.parameters.STAGING_PATH}}"

