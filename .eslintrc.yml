plugins:
  - import
  - jsdoc
  - node
extends:
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:node/recommended
settings:
  import/resolver:
    node:
      paths: ["app", "test"]
      extensions: [".js", ".ts"]
env:
  node: true
  es6: true
rules:
  indent: ["error", 2]
  no-restricted-syntax: ["error", "LabeledStatement", "WithStatement"]
  class-methods-use-this: "off"
  no-underscore-dangle: "off"
  require-jsdoc: ["warn"]
  valid-jsdoc: ["warn"]
  no-await-in-loop: ["off"]
  object-curly-newline: ["off"]
  no-plusplus: ["off"]
  no-unused-vars: ["error", { varsIgnorePattern: '^_', argsIgnorePattern: '^_' }]
  prefer-destructuring:
    - error
    - array: false
      object: true
    - enforceForRenamedProperties: false
  node/no-unsupported-features/es-syntax: 0
overrides:
  - files: [ "*.ts" ]
    parser: "@typescript-eslint/parser"
    parserOptions:
      sourceType: "module"
      ecmaVersion: 2017
      project: "./tsconfig.json"
    extends:
      - airbnb-typescript/base
      - plugin:import/typescript
      - plugin:@typescript-eslint/recommended
      - plugin:import/errors
      - plugin:import/warnings
      - plugin:node/recommended
    rules:
      "@typescript-eslint/explicit-function-return-type": "warn"
  - files: [ "test/**/*" ]
    rules:
      import/no-extraneous-dependencies: ["off"]
      node/no-unpublished-require: ["off"]
      # These overrides let us use anonymous functions for Mocha instead of lambdas, which is
      # the preferred method described in the Mocha docs
      prefer-arrow-callback: "off"
      func-names: "off"
  - files: [ "db/**/*" ]
    rules:
      typescript-eslint/no-var-requires: ["off"]
