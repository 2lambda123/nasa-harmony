plugins:
  - import
  - jsdoc
  - node
extends:
  - plugin:node/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript
  - airbnb-typescript/base
  - plugin:@typescript-eslint/recommended
settings:
  import/resolver:
    node:
      extensions: [".js", ".jsx", ".ts", ".tsx"]
parser: "@typescript-eslint/parser"
parserOptions:
  sourceType: "module"
  ecmaVersion: 2020
  project: "./tsconfig.json"
  projectFolderIgnoreList:
    - "/node_modules/"
    - "/db/"
    - "/coverage/"
env:
  node: true
  es6: true
rules:
  indent: ["error", 2]
  no-restricted-syntax: ["error", "LabeledStatement", "WithStatement"]
  class-methods-use-this: "off"
  no-underscore-dangle: "off"
  require-jsdoc: ["warn"]
  valid-jsdoc: ["warn"]
  no-await-in-loop: ["off"]
  object-curly-newline: ["off"]
  no-plusplus: ["off"]
  no-unused-vars: ["error", { varsIgnorePattern: '^_', argsIgnorePattern: '^_' }]
  prefer-destructuring:
    - error
    - array: false
      object: true
    - enforceForRenamedProperties: false
  node/no-unsupported-features/es-syntax: 0
  "@typescript-eslint/explicit-function-return-type": "warn"
overrides:
  - files: [ "test/**/*" ]
    rules:
      import/no-extraneous-dependencies: ["off"]
      node/no-unpublished-require: ["off"]
      # These overrides let us use anonymous functions for Mocha instead of lambdas, which is
      # the preferred method described in the Mocha docs
      prefer-arrow-callback: "off"
      func-names: "off"
