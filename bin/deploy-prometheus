#!/bin/bash
# create Prometheus deployment

env_save=$(export -p)
set -a
source "env-defaults"
source ".env"
set +a
eval "$env_save"

envsubst < "config/prometheus.yaml" | kubectl apply -f -

# Create a temp directory to hold the certificates
tmp_dir=$(mktemp -d)
echo $tmp_dir
 
# Create certifcate from docker
CFSSL_IMAGENAME="cfssl/cfssl:latest"
SERVICE_NAME="custom-metrics-apiserver"
ALT_NAMES="\"custom-metrics-apiserver.monitoring\",\"custom-metrics-apiserver.monitoring.svc\""
CMD="openssl req -x509 -sha256 -new -nodes -days 365 -newkey rsa:2048 -keyout metrics-ca.key -out metrics-ca.crt -subj \"/CN=ca\"; \
	 echo '{\"signing\":{\"default\":{\"expiry\":\"43800h\",\"usages\":[\"signing\",\"key encipherment\",\"'metrics'\"]}}}' > metrics-ca-config.json; \
	 echo '{\"CN\":\"'${SERVICE_NAME}'\",\"hosts\":[${ALT_NAMES}],\"key\":{\"algo\":\"rsa\",\"size\":2048}}' > metrics-ca-crs.json; \
	 cat metrics-ca-crs.json; \
     cfssl gencert -ca=metrics-ca.crt -ca-key=metrics-ca.key -config=metrics-ca-config.json metrics-ca-crs.json | \
     cfssljson -bare /workdir/apiserver"
docker run --entrypoint=/bin/bash \
    -v $tmp_dir:/workdir/ \
    -i ${CFSSL_IMAGENAME} \
    -c "${CMD}"

# Create secret
kubectl delete secret etcd-tls-client-certs \
    -n monitoring \
    --ignore-not-found
kubectl create secret generic \
    --from-file=serving.crt=${tmp_dir}/apiserver.pem \
    --from-file=serving.key=${tmp_dir}/apiserver-key.pem \
    etcd-tls-client-certs \
    -n monitoring

# Remove the temp directory
rm -rf $tmp_dir

# Deploy prometheus adapter
envsubst < "config/prometheus-adapter.yaml" | kubectl apply -f -
