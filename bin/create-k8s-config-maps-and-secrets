#!/bin/bash

declare -a secrets=("OAUTH_UID" "OAUTH_CLIENT_ID" "OAUTH_PASSWORD" "EDL_PASSWORD" "SHARED_SECRET_KEY" "COOKIE_SECRET" "DATABASE_URL" "NB_EDL_PASSWORD")
declare -a processed_vars=()

env_files=(
  "lib/util/env-defaults"
  "env-defaults"
  "kubernetes-services/work-scheduler/env-defaults"
  "kubernetes-services/work-updater/env-defaults"
  "kubernetes-services/work-reaper/env-defaults"
  "kubernetes-services/work-failer/env-defaults"
  ".env"
)

env_save=$(export -p)
set -a

for file in "${env_files[@]}"; do
  source "$file"
done
set +ax
eval "$env_save"

USER_AGENT="harmony/${RELEASE_VERSION} (${CLIENT_ID})"
SERVICES_YML=$(< config/services.yml)
# needed for k8s services running locally that access the dB
DATABASE_URL=${DATABASE_URL/localhost/postgres}

EDL_USERNAME="${EDL_USERNAME:-unset}"
EDL_PASSWORD="${EDL_PASSWORD:-unset}"

cat <<EOF > /tmp/config_map.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: harmony-env
data:
  LOCALSTACK_HOST: "${LOCALSTACK_K8S_HOST}"
  STAGING_PATH: "${STAGING_PATH}"
  SERVICES_YML: $(echo -n "${SERVICES_YML}" | base64 | tr -d "\n")
EOF

for file in "${env_files[@]}"; do
    if [[ -f ${file} ]]; then
        while IFS='=' read -r name value ; do
            # Check if name is non-empty, not in secrets, and not processed yet
            # echo "Name is $name and value is ${!name}"
            # if [[ ! " ${secrets[@]} " =~ " ${name} " ]]; then
            # if [[ ! " ${secrets[@]} " =~ " ${name} " && -z ${processed_vars[$name]} ]]; then
            # if [[ -n $name && ! " ${secrets[@]} " =~ " ${name} " && -z ${processed_vars[$name]} ]]; then
            if [[ -n "${!name}" && ! " ${secrets[@]} " =~ " ${name} " ]]; then
                # if [[ -n "${!name}" ]]; then
                # echo "$name is set to ${!name} and is not a secret"
                escaped_value="${!name}"
                escaped_value=$(echo "$escaped_value" | sed 's/"/\\\"/g')
                echo "  ${name}: \"${escaped_value}\"" >> /tmp/config_map.yml
                # processed_vars[$name]=1
                # fi
            fi
        done < <(grep '=' "${file}" | awk -F= '{print $1}')
    fi
done

kubectl -n harmony apply -f /tmp/config_map.yml
rm /tmp/config_map.yml

cat <<EOF | kubectl -n harmony apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: harmony-secrets
type: Opaque
data:
  OAUTH_CLIENT_ID: $(echo -n "${OAUTH_CLIENT_ID}" | base64)
  OAUTH_UID: $(echo -n "${OAUTH_UID}" | base64)
  OAUTH_PASSWORD: $(echo -n "${OAUTH_PASSWORD}" | base64)
  EDL_PASSWORD: $(echo -n "${EDL_PASSWORD:-unset}" | base64)
  SHARED_SECRET_KEY: $(echo -n "${SHARED_SECRET_KEY}" | base64)
  COOKIE_SECRET: $(echo -n "${COOKIE_SECRET}" | base64 | tr -d "\n")
  DATABASE_URL: $(echo -n "${DATABASE_URL}" | base64 | tr -d "\n")
EOF
