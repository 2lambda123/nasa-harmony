#!/bin/bash

set -e

if [ -f .env ]; then
  set -o allexport
  source .env
  set +o allexport
fi

# Localstack startup script setup

stagingBucket="${STAGING_BUCKET:-local-staging-bucket}"
uploadBucket="${UPLOAD_BUCKET:-local-upload-bucket}"
deadLetterQueue="${SERVICE_DEAD_LETTER_QUEUE_NAME:-harmony-dead-letter-queue}"

export AWS_DEFAULT_REGION=us-west-2
export AWS_ACCESS_KEY_ID=fake
export AWS_SECRET_ACCESS_KEY=fake

tmpdir="$(pwd)/tmp/localstack"
rm -rf $tmpdir
mkdir -p $tmpdir

start_script="$tmpdir/startup.sh"
deadLetterQueueArn="arn:aws:sqs:$AWS_DEFAULT_REGION:123456789012:$deadLetterQueue"
redrivePolicy='RedrivePolicy="{\"deadLetterTargetArn\":\"arn:aws:sqs:'$AWS_DEFAULT_REGION':123456789012:'$deadLetterQueue'\",\"maxReceiveCount\":\"1\"}"'

echo "awslocal s3 mb s3://$stagingBucket" >> "$start_script"
echo "awslocal s3 mb s3://$uploadBucket" >> "$start_script"
# echo "awslocal sqs create-queue --queue-name $deadLetterQueue" >> "$start_script"
# for queue in $(sed -n -e 's/^[[:space:]]*queue_url:.*}//p' config/services.yml); do
#   echo "awslocal sqs create-queue --queue-name $queue --attributes '$redrivePolicy'" >> $start_script
# done

echo "Wrote localstack startup script to $start_script"

# Localstack execution
docker-compose up
